{"version":3,"sources":["Common/Constants.js","MainPage/Reducers/GetInitialData.js","MainPage/Actions/Actions.js","MainPage/Reducers/Reducers.js","MainPage/Components/Search/Selectors/Selector.js","MainPage/Components/Search/Selectors/RegionSelector.js","MainPage/Components/Search/Selectors/SubregionSelector.js","MainPage/Components/Search/Selectors/SortingSelector.js","MainPage/Components/Search/SovereignFilter/SovereignFilter.js","MainPage/Components/Search/Searchbar/Searchbar.js","MainPage/Components/Search/Search.js","MainPage/Components/Results/CountryCard/CountryCard.js","MainPage/Components/Results/PaginationButtons/PaginationButtons.js","MainPage/Components/Results/Results.js","MainPage/MainPage.js","CountryPage/Cards/Card.js","Common/EmptyCheck.js","CountryPage/Cards/MainCard.js","CountryPage/Cards/StatisticsCard.js","CountryPage/Cards/CodesCard.js","CountryPage/Cards/LanguagesCard.js","CountryPage/Cards/Accordions/Accordion.js","CountryPage/Cards/Accordions/Hooks.js","CountryPage/Cards/Accordions/LanguagesAccordion.js","CountryPage/Cards/LanguageAccordionCard.js","CountryPage/Cards/Accordions/CurrenciesAccordion.js","CountryPage/Cards/CurrencyAccordionCard.js","CountryPage/Cards/Accordions/RegionalBlocsAccordion.js","CountryPage/Cards/RegionalBlocAccordionCard.js","CountryPage/Cards/AlternativeSpellingsCard.js","CountryPage/Cards/NeighboursCard.js","CountryPage/CountryPage.js","App.js","serviceWorker.js","index.js"],"names":["SORTED_BY","ALPHABETICAL","REVERSED_ALPHABETICAL","LARGEST_POPULATION","SMALLEST_POPULATION","LARGEST_AREA","SMALLEST_AREA","INITIAL_PAGE","SOVEREIGN_STATES","NAME_NORMALIZATION_DICTIONARY","REGION_COLORS","getMapping","listOfCountries","mainKey","otherKeys","mainValues","assignKeysFromMainKeyValues","assignKeysFromOtherKeysValues","fillOtherKeysWithPossibleValues","country","Object","keys","includes","assign","mainValue","otherKey","push","assignOfficiallyRecognized","map","name","isOfficiallyRecognized","sovereign","normalizeNames","dictionary","apiName","entry","getInitialData","a","async","fetch","resp","json","data","regionsMapping","countries","actionTypes","changeRegionFilter","region","type","payload","changeSortingType","sortingType","changeSubregionFilter","subregion","setInitialData","search","query","sort","swapSovereignStatesFilter","changePage","page","sortByReducer","state","action","sortBy","initialReducer","allCountries","initial","filteredCountriesReducer","currentQuery","filteredCountries","filter","filters","isSearched","sortCountries","sovereignStateFilterReducer","sovereignStates","regionFilterReducer","subregionFilterReducer","pageReducer","sortAlphabetical","c1","c2","localeCompare","population","area","isAnyFilterTrue","values","reduce","acc","toUpperCase","reducer","styled","select","props","isActive","findRegion","selectedSubregion","RegionSelector","defaultRegion","selectedRegion","defaultSubregions","setSubregions","useEffect","length","Selector","defaultValue","onChange","e","subregions","target","value","setSelectedSubregion","changeQueryParameters","i","key","SubregionSelector","SortingSelector","useState","selectedFilter","setSelectedFilter","changeSorting","sorting","charAt","slice","toLowerCase","replace","Sovereign","button","SovereignFilter","setIsActive","onClick","swapSovereignStates","SearchbarInput","input","Searchbar","Div","div","FiltersDiv","Search","Card","Flag","img","HeaderDiv","Underline","darken","TitleDiv","mainLength","secondaryLength","BodyDiv","putCommas","bigNumber","numberWithCommas","digits","String","split","reverse","join","CountryCard","to","alpha3Code","style","color","textDecoration","nativeName","className","src","flag","alt","capital","PaginationButtonsDiv","PaginationButton","active","Span","getPaginationButtons","pagesCount","setPage","currentPage","isBreakShown","Array","el","pageNumber","maxDistance","isCorner","Math","abs","number","maxNumber","PaginationButtons","CardsDiv","P","Results","pageResultsSize","ceil","MainPage","params","initialRegion","location","initialSubregion","useReducer","sortedBy","dispatch","then","actions","catch","error","console","log","newQuery","history","pathname","EmptyCheck","isArray","children","MainCard","demonym","getDensityRow","density","Infinity","toFixed","StatisticsCard","Timezone","span","CodesCard","alpha2Code","cioc","numericCode","topLevelDomain","callingCodes","timezones","languagesMap","mapToLanguageName","code","language","LanguagesCard","translations","getButtons","setActiveId","activeId","Accordion","useAccordionValues","LanguagesAccordion","currentLanguage","getValue","iso639_1","iso639_2","LanguageAccordionCard","languages","CurrenciesAccordion","currentCurrency","symbol","CurrencyAccordionCard","currencies","OtherSpelling","RegionalBlocsAccordion","currentBloc","otherNames","otherAcronyms","RegionalBlocAccordionCard","regionalBlocs","AlternativeSpellingsCard","altSpellings","NeighboursDiv","NeighboursCard","borders","neighbour","Breadcrumb","Column","CountryPage","match","setCountry","getCountryData","normalizeName","er","response","App","exact","path","component","Boolean","window","hostname","customHistory","createBrowserHistory","GlobalStyle","createGlobalStyle","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"0PAAMA,EAAY,CAChBC,aAAc,eACdC,sBAAuB,wBACvBC,mBAAoB,qBACpBC,oBAAqB,sBACrBC,aAAc,eACdC,cAAe,iBAGXC,EAAe,EAOfC,EAAmB,CACvB,cACA,UACA,UACA,UACA,SACA,sBACA,YACA,UACA,YACA,UACA,aACA,UACA,UACA,aACA,WACA,UACA,UACA,SACA,QACA,SACA,mCACA,yBACA,WACA,SACA,oBACA,WACA,eACA,UACA,WACA,WACA,SACA,aACA,2BACA,OACA,QACA,QACA,WACA,UACA,QACA,qCACA,aACA,UACA,OACA,SACA,iBACA,UACA,WACA,WACA,qBACA,UACA,QACA,cACA,oBACA,UACA,UACA,WACA,OACA,UACA,SACA,QACA,SACA,UACA,UACA,QACA,SACA,UACA,YACA,SACA,gBACA,SACA,QACA,WACA,WACA,UACA,UACA,QACA,YACA,mBACA,6BACA,OACA,UACA,SACA,QACA,UACA,QACA,SACA,aACA,QACA,WACA,SACA,aACA,mCACA,SACA,UACA,UACA,UACA,QACA,gBACA,YACA,aACA,8CACA,aACA,SACA,WACA,WACA,OACA,QACA,mBACA,aACA,YACA,SACA,mCACA,wBACA,SACA,WACA,aACA,UACA,aACA,UACA,UACA,QACA,QACA,cACA,cACA,YACA,QACA,UACA,0CACA,SACA,OACA,WACA,QACA,sBACA,SACA,mBACA,WACA,OACA,cACA,SACA,WACA,QACA,UACA,qBACA,SACA,wBACA,cACA,mCACA,QACA,aACA,wBACA,eACA,UACA,SACA,aACA,eACA,YACA,WACA,WACA,kBACA,UACA,eACA,sBACA,cACA,QACA,YACA,QACA,WACA,YACA,SACA,cACA,uBACA,SACA,aACA,+BACA,WACA,cACA,OACA,QACA,sBACA,UACA,SACA,eACA,SACA,SACA,UACA,uBACA,uDACA,2BACA,UACA,aACA,UACA,qCACA,WACA,QACA,SACA,YAGIC,EAAgC,CACpC,CAAC,mBAAiB,iBAClB,CAAC,mCAAoC,WACrC,CAAC,0BAA2B,iBA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","file":"static/js/main.62ca0f83.chunk.js","sourcesContent":["const SORTED_BY = {\n  ALPHABETICAL: \"ALPHABETICAL\",\n  REVERSED_ALPHABETICAL: \"REVERSED_ALPHABETICAL\",\n  LARGEST_POPULATION: \"LARGEST_POPULATION\",\n  SMALLEST_POPULATION: \"SMALLEST_POPULATION\",\n  LARGEST_AREA: \"LARGEST_AREA\",\n  SMALLEST_AREA: \"SMALLEST_AREA\",\n}\n\nconst INITIAL_PAGE = 1;\n\nexport {\n  SORTED_BY,\n  INITIAL_PAGE\n}\n\nconst SOVEREIGN_STATES = [\n  \"Afghanistan\",\n  \"Albania\",\n  \"Algeria\",\n  \"Andorra\",\n  \"Angola\",\n  \"Antigua and Barbuda\",\n  \"Argentina\",\n  \"Armenia\",\n  \"Australia\",\n  \"Austria\",\n  \"Azerbaijan\",\n  \"Bahamas\",\n  \"Bahrain\",\n  \"Bangladesh\",\n  \"Barbados\",\n  \"Belarus\",\n  \"Belgium\",\n  \"Belize\",\n  \"Benin\",\n  \"Bhutan\",\n  \"Bolivia (Plurinational State of)\",\n  \"Bosnia and Herzegovina\",\n  \"Botswana\",\n  \"Brazil\",\n  \"Brunei Darussalam\",\n  \"Bulgaria\",\n  \"Burkina Faso\",\n  \"Burundi\",\n  \"Cambodia\",\n  \"Cameroon\",\n  \"Canada\",\n  \"Cabo Verde\",\n  \"Central African Republic\",\n  \"Chad\",\n  \"Chile\",\n  \"China\",\n  \"Colombia\",\n  \"Comoros\",\n  \"Congo\",\n  \"Congo (Democratic Republic of the)\",\n  \"Costa Rica\",\n  \"Croatia\",\n  \"Cuba\",\n  \"Cyprus\",\n  \"Czech Republic\",\n  \"Denmark\",\n  \"Djibouti\",\n  \"Dominica\",\n  \"Dominican Republic\",\n  \"Ecuador\",\n  \"Egypt\",\n  \"El Salvador\",\n  \"Equatorial Guinea\",\n  \"Eritrea\",\n  \"Estonia\",\n  \"Ethiopia\",\n  \"Fiji\",\n  \"Finland\",\n  \"France\",\n  \"Gabon\",\n  \"Gambia\",\n  \"Georgia\",\n  \"Germany\",\n  \"Ghana\",\n  \"Greece\",\n  \"Grenada\",\n  \"Guatemala\",\n  \"Guinea\",\n  \"Guinea-Bissau\",\n  \"Guyana\",\n  \"Haiti\",\n  \"Holy See\",\n  \"Honduras\",\n  \"Hungary\",\n  \"Iceland\",\n  \"India\",\n  \"Indonesia\",\n  \"Côte d'Ivoire\",\n  \"Iran (Islamic Republic of)\",\n  \"Iraq\",\n  \"Ireland\",\n  \"Israel\",\n  \"Italy\",\n  \"Jamaica\",\n  \"Japan\",\n  \"Jordan\",\n  \"Kazakhstan\",\n  \"Kenya\",\n  \"Kiribati\",\n  \"Kuwait\",\n  \"Kyrgyzstan\",\n  \"Lao People's Democratic Republic\",\n  \"Latvia\",\n  \"Lebanon\",\n  \"Lesotho\",\n  \"Liberia\",\n  \"Libya\",\n  \"Liechtenstein\",\n  \"Lithuania\",\n  \"Luxembourg\",\n  \"Macedonia (the former Yugoslav Republic of)\",\n  \"Madagascar\",\n  \"Malawi\",\n  \"Malaysia\",\n  \"Maldives\",\n  \"Mali\",\n  \"Malta\",\n  \"Marshall Islands\",\n  \"Mauritania\",\n  \"Mauritius\",\n  \"Mexico\",\n  \"Micronesia (Federated States of)\",\n  \"Moldova (Republic of)\",\n  \"Monaco\",\n  \"Mongolia\",\n  \"Montenegro\",\n  \"Morocco\",\n  \"Mozambique\",\n  \"Myanmar\",\n  \"Namibia\",\n  \"Nauru\",\n  \"Nepal\",\n  \"Netherlands\",\n  \"New Zealand\",\n  \"Nicaragua\",\n  \"Niger\",\n  \"Nigeria\",\n  \"Korea (Democratic People's Republic of)\",\n  \"Norway\",\n  \"Oman\",\n  \"Pakistan\",\n  \"Palau\",\n  \"Palestine, State of\",\n  \"Panama\",\n  \"Papua New Guinea\",\n  \"Paraguay\",\n  \"Peru\",\n  \"Philippines\",\n  \"Poland\",\n  \"Portugal\",\n  \"Qatar\",\n  \"Romania\",\n  \"Russian Federation\",\n  \"Rwanda\",\n  \"Saint Kitts and Nevis\",\n  \"Saint Lucia\",\n  \"Saint Vincent and the Grenadines\",\n  \"Samoa\",\n  \"San Marino\",\n  \"Sao Tome and Principe\",\n  \"Saudi Arabia\",\n  \"Senegal\",\n  \"Serbia\",\n  \"Seychelles\",\n  \"Sierra Leone\",\n  \"Singapore\",\n  \"Slovakia\",\n  \"Slovenia\",\n  \"Solomon Islands\",\n  \"Somalia\",\n  \"South Africa\",\n  \"Korea (Republic of)\",\n  \"South Sudan\",\n  \"Spain\",\n  \"Sri Lanka\",\n  \"Sudan\",\n  \"Suriname\",\n  \"Swaziland\",\n  \"Sweden\",\n  \"Switzerland\",\n  \"Syrian Arab Republic\",\n  \"Taiwan\",\n  \"Tajikistan\",\n  \"Tanzania, United Republic of\",\n  \"Thailand\",\n  \"Timor-Leste\",\n  \"Togo\",\n  \"Tonga\",\n  \"Trinidad and Tobago\",\n  \"Tunisia\",\n  \"Turkey\",\n  \"Turkmenistan\",\n  \"Tuvalu\",\n  \"Uganda\",\n  \"Ukraine\",\n  \"United Arab Emirates\",\n  \"United Kingdom of Great Britain and Northern Ireland\",\n  \"United States of America\",\n  \"Uruguay\",\n  \"Uzbekistan\",\n  \"Vanuatu\",\n  \"Venezuela (Bolivarian Republic of)\",\n  \"Viet Nam\",\n  \"Yemen\",\n  \"Zambia\",\n  \"Zimbabwe\"\n]\n\nconst NAME_NORMALIZATION_DICTIONARY = [\n  [\"Åland Islands\", \"Aland Islands\"],\n  [\"Bolivia (Plurinational State of)\", \"Bolivia\"],\n  [\"Cocos (Keeling) Islands\", \"Cocos Islands\"],\n  [\"Congo (Democratic Republic of the)\", \"Democratic Republic of the Congo\"],\n  [\"Curaçao\", \"Curacao\"],\n  [\"Falkland Islands (Malvinas)\", \"Falkland Islands\"],\n  [\"Holy See\", \"Vatican City\"],\n  [\"Côte d'Ivoire\", \"Ivory Coast\"],\n  [\"Iran (Islamic Republic of)\", \"Iran\"],\n  [\"Lao People's Democratic Republic\", \"Laos\"],\n  [\"Macedonia (the former Yugoslav Republic of)\", \"North Macedonia\"],\n  [\"Micronesia (Federated States of)\", \"Micronesia\"],\n  [\"Moldova (Republic of)\", \"Moldova\"],\n  [\"Korea (Democratic People's Republic of)\", \"North Korea\"],\n  [\"Palestine, State of\", \"Palestine\"],\n  [\"Réunion\", \"Reunion\"],\n  [\"Russian Federation\", \"Russia\"],\n  [\"Saint Martin (French part)\", \"Saint Martin\"],\n  [\"Sint Maarten (Dutch part)\", \"Sint Maarten\"],\n  [\"Korea (Republic of)\", \"South Korea\"],\n  [\"Syrian Arab Republic\", \"Syria\"],\n  [\"Tanzania, United Republic of\", \"Tanzania\"],\n  [\"United Kingdom of Great Britain and Northern Ireland\", \"United Kingdom\"],\n  [\"Venezuela (Bolivarian Republic of)\", \"Venezuela\"],\n  [\"Viet Nam\", \"Vietnam\"]\n]\n\nconst REGION_COLORS = {\n  \"Africa\": \"#9f5338\",\n  \"Americas\": \"#8b5dd4\",\n  \"Asia\": \"#398f0f\",\n  \"Europe\": \"#464cd7\",\n  \"Oceania\": \"#66ced0\",\n  \"Polar\": \"#3f8374\",\n  \"\": \"#b0b0b0\"\n}\n\nexport {\n  SOVEREIGN_STATES,\n  NAME_NORMALIZATION_DICTIONARY,\n  REGION_COLORS\n}","import { SOVEREIGN_STATES, NAME_NORMALIZATION_DICTIONARY } from \"../../Common/Constants\";\n\nasync function getInitialData(){\n  const resp = await fetch(\n    // process.env.REACT_APP_MOCK_URL ? \n    // `${process.env.REACT_APP_MOCK_URL}/rest/v2/all` : \n    `https://restcountries.eu/rest/v2/all`\n  );\n  const data = await resp.json();\n  let listOfCountries = assignOfficiallyRecognized(data);\n  listOfCountries = normalizeNames(listOfCountries, NAME_NORMALIZATION_DICTIONARY);\n  let regionsMapping = getMapping(listOfCountries, \"region\", [\"subregion\"]);\n  return {\n    countries: listOfCountries,\n    regionsMapping: regionsMapping\n  }\n}\n\n// Accepts a list of objects, main key of those objects and an array of other keys.\n// Returns object, where each key is one value from values in main key.\n// These keys map objects, which have arrays of possible values from other keys.\nconst getMapping = (listOfCountries, mainKey, otherKeys) => {\n  let mainValues = assignKeysFromMainKeyValues(listOfCountries, mainKey);\n  mainValues = assignKeysFromOtherKeysValues(mainValues, otherKeys);\n  mainValues = fillOtherKeysWithPossibleValues(mainValues, listOfCountries, mainKey, otherKeys);\n  return mainValues;\n}\n\nconst assignKeysFromMainKeyValues = (listOfCountries, mainKey) => {\n  let mainValues = {};\n  for(let country of listOfCountries){\n    if(!Object.keys(mainValues).includes(country[mainKey])){\n      mainValues = Object.assign({}, mainValues, {[country[mainKey]]: {}})\n    }\n  }\n  return mainValues;\n}\n\nconst assignKeysFromOtherKeysValues = (mainValues, otherKeys) => {\n  for(let mainValue of Object.keys(mainValues)){\n    for(let otherKey of otherKeys){\n      if(!Object.keys(mainValues).includes(otherKey)){\n        mainValues[mainValue] = Object.assign({}, mainValues[mainValue], {[otherKey]: []})\n      }\n    }\n  }\n  return mainValues;\n}\n\nconst fillOtherKeysWithPossibleValues = (mainValues, listOfCountries, mainKey, otherKeys) => {\n  for(let country of listOfCountries){\n    for(let mainValue of Object.keys(mainValues)){\n      if(mainValue === country[mainKey]){\n        for(let otherKey of otherKeys){\n          if(!mainValues[mainValue][otherKey].includes(country[otherKey])){\n              mainValues[mainValue][otherKey].push(country[otherKey]);\n          }\n        }\n      }\n    }\n  }\n  return mainValues;\n}\n\nconst assignOfficiallyRecognized = (listOfCountries) => {\n  const isOfficiallyRecognized = (country) => {\n      const officiallyRecognizedStates = SOVEREIGN_STATES;\n      return officiallyRecognizedStates.includes(country.name);\n  }\n\n  return listOfCountries.map((country) => {\n    if(isOfficiallyRecognized(country)){\n      return Object.assign({}, country, {sovereign: true});\n    } else return Object.assign({}, country, {sovereign: false});\n  })\n}\n\nconst normalizeNames = (listOfCountries, dictionary) => {\n  return listOfCountries.map((country) => {\n    country = Object.assign({}, country, {apiName: country.name})\n    for (let entry of dictionary) {\n      if (entry[0] === country.name) {\n        return Object.assign({}, country, {name: entry[1]});\n      }\n    }\n    return country;\n  })\n}\n\nexport default getInitialData;","export const actionTypes = {\n  SET_INITIAL_DATA: \"SET_INITIAL_DATA\",\n  SWAP_SOVEREIGN_STATES_FILTER: \"SWAP_SOVEREIGN_STATES_FILTER\",\n  CHANGE_REGION_FILTER: \"CHANGE_REGION_FILTER\",\n  CHANGE_SUBREGION_FILTER: \"CHANGE_SUBREGION_FILTER\",\n  SEARCH: \"SEARCH\",\n  CHANGE_SORTING: \"CHANGE_SORTING\",\n  SORT: \"SORT\",\n  CHANGE_PAGE: \"CHANGE_PAGE\"\n}\n\nconst changeRegionFilter = (region) => {\n  return {\n    type: actionTypes.CHANGE_REGION_FILTER,\n    payload: region\n  }\n}\n\nconst changeSortingType = (sortingType) => {\n  return {\n    type: actionTypes.CHANGE_SORTING,\n    payload: sortingType\n  }\n}\n\nconst changeSubregionFilter = (subregion) => {\n  return {\n    type: actionTypes.CHANGE_SUBREGION_FILTER,\n    payload: subregion\n  }\n}\n\nconst search = (query) => {\n  return {\n    type: actionTypes.SEARCH,\n    payload: query\n  }\n}\n\nconst setInitialData = (data) => {\n  return {\n    type: actionTypes.SET_INITIAL_DATA,\n    payload: {\n      countries: data.countries,\n      regionsMapping: data.regionsMapping\n    }\n  }\n}\n\nconst sort = () => {\n  return {\n    type: actionTypes.SORT\n  }\n}\n\nconst swapSovereignStatesFilter = () => {\n  return {\n    type: actionTypes.SWAP_SOVEREIGN_STATES_FILTER\n  }\n}\n\nconst changePage = (page) => {\n  return {\n    type: actionTypes.CHANGE_PAGE,\n    payload: page\n  }\n}\n\nexport default {\n  changeRegionFilter,\n  changeSortingType,\n  changeSubregionFilter,\n  setInitialData,\n  search,\n  sort,\n  swapSovereignStatesFilter,\n  changePage,\n}","import { SORTED_BY, INITIAL_PAGE } from \"../../Common/Constants\";\nimport { actionTypes } from \"../Actions/Actions\";\n    \nconst reducer = (state, action) => {\n  return {\n    initial: initialReducer(state, action),\n    search: filteredCountriesReducer(state, action), \n    filters: {\n      sovereignStates: sovereignStateFilterReducer(state, action),\n      region: regionFilterReducer(state, action),\n      subregion: subregionFilterReducer(state, action)\n    },\n    sortBy: sortByReducer(state, action),\n    page: pageReducer(state, action)\n  }\n}\n\nconst sortByReducer = (state, action) => {\n  switch(action.type){\n    case actionTypes.CHANGE_SORTING:\n      return action.payload;\n    default:\n      return state.sortBy;\n  }\n}\n\nconst initialReducer = (state, action) => {\n  switch (action.type){\n    case actionTypes.SET_INITIAL_DATA:\n      return {\n        allCountries: action.payload.countries,\n        regionsMapping: action.payload.regionsMapping\n      }\n    default:\n      return {\n        ...state.initial\n      }\n  }\n}\n\nconst filteredCountriesReducer = (state, action) => {\n  switch(action.type){\n    case actionTypes.SET_INITIAL_DATA:\n      return {\n        currentQuery: \"\",\n        filteredCountries: filter(action.payload.countries, \"\", state.filters),\n        isSearched: false\n      }\n    case actionTypes.SEARCH:\n      return search(state, action.payload);\n    case actionTypes.SORT:\n      return {\n        currentQuery: state.search.currentQuery,\n        filteredCountries: sortCountries(state.search.filteredCountries, state.sortBy),\n        isSearched: state.search.isSearched\n      }\n    default:\n      return state.search;\n  }\n}\n\nconst sovereignStateFilterReducer = (state, action) => {\n  switch(action.type){\n    case actionTypes.SWAP_SOVEREIGN_STATES_FILTER:\n      return !state.filters.sovereignStates\n    default:\n      return state.filters.sovereignStates\n  }\n}\n\nconst regionFilterReducer = (state, action) => {\n  switch(action.type){\n    case actionTypes.CHANGE_REGION_FILTER:\n      return action.payload;\n    default:\n      return state.filters.region;\n  }\n}\n\nconst subregionFilterReducer = (state, action) => {\n  switch(action.type){\n    case actionTypes.CHANGE_SUBREGION_FILTER:\n      return action.payload;\n    default:\n      return state.filters.subregion;\n  }\n}\n\nconst pageReducer = (state, action) => {\n  switch(action.type){\n    case actionTypes.CHANGE_PAGE:\n      return action.payload;\n    case actionTypes.SEARCH:\n      return INITIAL_PAGE;\n    default: \n      return INITIAL_PAGE;\n  }\n}\n\nconst sortCountries = (countries, sortBy) => {\n  switch(sortBy){\n    case SORTED_BY.ALPHABETICAL:\n      return sortAlphabetical(countries);\n    case SORTED_BY.REVERSED_ALPHABETICAL:\n      return countries.sort((c1, c2) => {\n        return c2.name.localeCompare(c1.name);\n      });\n    case SORTED_BY.LARGEST_POPULATION:\n      return sortAlphabetical(countries).sort((c1, c2) => {\n        return c2.population - c1.population;\n      });\n    case SORTED_BY.SMALLEST_POPULATION:\n      return sortAlphabetical(countries).sort((c1, c2) => {\n        return c1.population - c2.population;\n      });\n    case SORTED_BY.LARGEST_AREA:\n      return sortAlphabetical(countries).sort((c1, c2) => {\n        return c2.area - c1.area;\n      });\n    case SORTED_BY.SMALLEST_AREA:\n      return sortAlphabetical(countries).sort((c1, c2) => {\n        return c1.area - c2.area;\n      });\n    default:\n      return countries;\n  }\n}\n\nconst sortAlphabetical = (countries) => {\n  return countries.sort((c1, c2) => {\n    return c1.name.localeCompare(c2.name);\n  });\n}\n\nconst search = (state, currentQuery = \"\") => {\n  if((currentQuery !== \"\") || isAnyFilterTrue(state.filters)){\n    let filteredCountries = filter(state.initial.allCountries, currentQuery, state.filters);\n    filteredCountries = sortCountries(filteredCountries, state.sortBy);\n    return {\n      currentQuery: currentQuery,\n      filteredCountries: filteredCountries,\n      isSearched: true\n    }\n  } \n  return {\n    currentQuery: currentQuery,\n    filteredCountries: sortCountries(state.initial.allCountries, state.sortBy),\n    isSearched: false\n  };\n}\n\nconst isAnyFilterTrue = (filters) => {\n  return Object.values(filters).reduce((acc, filter) => {\n    if (filter){\n      return true;\n    }\n    return acc;\n  }, false)\n}\n\nconst filter = (allCountries, query = \"\", filters = {}) => {\n  return allCountries.filter((country) => {\n    return country.name.toUpperCase().includes(query.toUpperCase());\n  }).filter((country) => {\n    if (filters.sovereignStates) {\n      return country.sovereign;\n    } else return true;\n  }).filter((country) => {\n    if(filters.region === \"\"){\n      return true;\n    } else {\n      return country.region.toUpperCase() === filters.region.toUpperCase();\n    }\n  }).filter((country) => {\n    if(filters.subregion === \"\"){\n      return true;\n    } else {\n      return country.subregion.toUpperCase() === filters.subregion.toUpperCase();\n    }\n  });\n}\n\nexport default reducer;","import styled from 'styled-components';\n\nexport default styled.select`\n  width: 180px;\n  text-align-last: center;\n  margin: 0 3px;\n  cursor: pointer;\n  background: ${props => props.isActive ? \"#262\" : \"#ddd\"};\n  color: ${props => props.isActive ? \"#ddd\" : \"#333\"};\n  appearance: none;\n  height: 25px;\n  outline: none;\n  border: 2px solid #000;\n`","import React, { useEffect } from 'react';\nimport Selector from './Selector';\n\nconst RegionSelector = (props) => {\n  const region = findRegion(props.regionsMapping, props.selectedSubregion);\n  const defaultRegion = props.selectedRegion ? props.selectedRegion \n  : props.selectedSubregion ? region\n  : \"\";\n  const defaultSubregions = props.regionsMapping[defaultRegion][\"subregion\"].sort();\n  const setSubregions = props.setSubregions;\n\n  useEffect(() => {\n    if(defaultSubregions.length > 1){\n      setSubregions([\"\", ...defaultSubregions])\n    } else {\n      setSubregions([\"\"])\n    }\n  }, [defaultSubregions, setSubregions])\n\n  return (\n    <Selector \n      defaultValue={defaultRegion}\n      onChange={(e) => {\n        let subregions = props.regionsMapping[e.target.value][\"subregion\"].sort();\n        if(e.target.value !== \"\" && \n          props.regionsMapping[e.target.value][\"subregion\"].length > 1){\n          props.setSubregions([\"\", ...subregions]);\n        } else {\n          props.setSubregions([...subregions]);\n        }\n        props.setSelectedSubregion(\"\");\n        props.changeRegionFilter(e.target.value)\n        props.changeSubregionFilter(\"\")\n        props.changeQueryParameters(e.target.value ? `region=${e.target.value}` : '')\n      }}\n      isActive={props.selectedRegion}\n    >\n      {Object.keys(props.regionsMapping).sort().map((region, i) => {\n        return <option \n          value={region}\n          key={i}\n        >{region ? region : \n          props.selectedRegion === region ? \"Region: Any\" : \"All\"}</option>\n      })}\n    </Selector>\n  )\n}\n\nconst findRegion = (regionsMapping, selectedSubregion) => {\n  for(let region in regionsMapping) {\n    for(let subregion of regionsMapping[region][\"subregion\"]){\n      if(subregion === selectedSubregion){\n        return region;\n      }\n    }\n  }\n  return \"\";\n}\n\nexport default RegionSelector\n","import React from 'react'\nimport Selector from './Selector';\n\nfunction SubregionSelector(props) {\n  return (\n    <Selector \n      value={props.selectedSubregion}\n      onChange={(e) => {\n        props.setSelectedSubregion(e.target.value);\n        props.changeSubregionFilter(e.target.value);\n        props.changeQueryParameters(`region=${props.selectedRegion}${e.target.value ? `&subregion=${e.target.value}` : ''}`);\n      }}\n      isActive={props.selectedSubregion}\n    >\n      {props.subregions.map((subregion, i) => {\n        return <option \n          value={subregion}\n          key={i}\n        >{subregion ? subregion : \n          props.selectedSubregion === subregion ? \"Subregion: Any\" : \"All\"}</option>\n      })}\n    </Selector>\n  )\n}\n\nexport default SubregionSelector\n","import React, { useState } from 'react';\nimport { SORTED_BY } from '../../../../Common/Constants';\nimport Selector from './Selector';\n\nfunction SortingSelector(props) {\n  const [selectedFilter, setSelectedFilter] = useState(SORTED_BY.ALPHABETICAL);\n\n  return ( \n    <Selector \n      value={selectedFilter}\n      onChange={(e) => {\n        setSelectedFilter(e.target.value);\n        props.changeSorting(e.target.value);\n      }}\n      isActive={selectedFilter !== SORTED_BY.ALPHABETICAL}\n    >\n      {Object.keys(SORTED_BY).map((sorting, i) => {\n        return <option \n          value={sorting}\n          key={i}\n        >Sort by: {sorting.charAt(0) + sorting.slice(1).toLowerCase().replace(\"_\", \" \")}</option>\n      })}\n    </Selector>\n  )\n}\n\nexport default SortingSelector;\n","import React, { useState } from 'react';\nimport styled from \"styled-components\";\n\nconst Sovereign = styled.button`\n  background: ${props => props.isActive ? \"#262\" : \"#ddd\"};\n  color: ${props => props.isActive ? \"#ddd\" : \"#333\"};\n  outline: none;\n  border-radius: 2px;\n  cursor: pointer;\n  margin: 3px;\n  padding: 0 8px;\n  border: 2px solid #000;\n  border-radius: 4px;\n  height: 25px;\n  width: 180px;\n`\n\nfunction SovereignFilter(props) {\n  const [ isActive, setIsActive ] = useState(false);\n\n  return (\n    <>\n      <Sovereign \n        onClick={() => {\n          props.swapSovereignStates();\n          setIsActive(!isActive);\n        }\n        }\n        isActive={isActive}\n      >\n        Sovereign Only\n      </Sovereign> \n    </>\n  )\n}\n\nexport default SovereignFilter\n","import React from 'react'\nimport styled from \"styled-components\";\n\nconst SearchbarInput = styled.input`\n  border: 2px solid #000;\n  outline: none;\n  height: 20px;\n  font-size: 12px;\n  padding: 15px 10px;\n  width: 300px;\n  border-radius: 8px;\n  margin: 2px;\n`\n\nfunction Searchbar(props) {\n  return (\n    <SearchbarInput \n      onChange={(e) => props.search(e.target.value)}\n    />\n  )\n}\n\nexport default Searchbar\n","import React, { useState } from \"react\";\nimport RegionSelector from \"./Selectors/RegionSelector\";\nimport SubregionSelector from \"./Selectors/SubregionSelector\";\nimport SortingSelectors from \"./Selectors/SortingSelector\";\nimport SovereignFilter from \"./SovereignFilter/SovereignFilter\";\nimport Searchbar from \"./Searchbar/Searchbar\";\nimport styled from \"styled-components\";\n\nconst Div = styled.div`\n  display: flex;\n  flex-direction: column;\n  background: linear-gradient(\n    rgba(0, 0, 0, 80%),\n    rgba(0, 0, 0, 70%)\n  );\n  z-index: 100;\n  color: white;\n  width: 100%;\n  align-items: center;\n  padding: 10px 10px 10px 10px;\n  position: sticky;\n  top: 0px;\n`\n\n const FiltersDiv = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n `\n\nfunction Search(props) {\n  const [ subregions, setSubregions ] = useState([\"\"]);\n  const [ selectedSubregion, setSelectedSubregion ] = useState(props.filters.subregion);\n  return (\n    <Div>\n      <Searchbar search={props.search}/>\n      <FiltersDiv>\n        <RegionSelector\n          regionsMapping={props.regionsMapping}\n          setSubregions={setSubregions}\n          setSelectedSubregion={setSelectedSubregion}\n          changeRegionFilter={props.changeRegionFilter}\n          changeSubregionFilter={props.changeSubregionFilter}\n          selectedRegion={props.filters.region}\n          selectedSubregion={selectedSubregion}\n          changeQueryParameters={props.changeQueryParameters}\n        />\n        <SubregionSelector\n          selectedSubregion={selectedSubregion}\n          setSelectedSubregion={setSelectedSubregion}\n          changeSubregionFilter={props.changeSubregionFilter}\n          subregions={subregions}\n          selectedRegion={props.filters.region}\n          changeQueryParameters={props.changeQueryParameters}\n        />\n        <SortingSelectors \n          changeSorting={props.changeSorting}\n        />\n        <SovereignFilter swapSovereignStates={props.swapSovereignStates}/>\n      </FiltersDiv>\n    </Div>\n  )\n}\n\nexport default Search;","import React from \"react\"\nimport styled from \"styled-components\";\nimport { darken } from \"polished\";\nimport { Link } from \"react-router-dom\";\nimport { REGION_COLORS } from \"../../../../Common/Constants\";\n\nconst Card = styled.div`\n  width: 220px;\n  height: 300px;\n  text-align: center;\n  color: #fff;\n  background: radial-gradient(#111, #333 125%);\n  border-radius: 8px;\n  border: 2px solid ${props => REGION_COLORS[props.region]};\n  margin: 10px;\n  transition-duration: .4s;\n  z-index: 0;\n\n  p {\n    margin: 5px;\n  }\n\n  &:hover {\n    background: radial-gradient(#000, #333 125%);\n    transform: translateY(-5px);\n  }\n`\n\nconst Flag = styled.img`\n  width: 60px;\n  height: 40px;\n`\n\nconst HeaderDiv = styled.div`\n  display: flex;\n  width: 100%;\n  height: 26%;\n  border-radius: 8px 8px 0 0;\n  h2, p {\n    margin: 0;\n  }\n  padding: 10px;\n  justify-content: space-between;\n  align-items: center;\n`\n\nconst Underline = styled.div`\nmargin: 0;\n  height: 8%;\n  background: linear-gradient(\n    70deg,\n    ${props => darken(.12, REGION_COLORS[props.region])} 0%, \n    ${props => REGION_COLORS[props.region]} 80%,\n    ${props => darken(.12, REGION_COLORS[props.region])} 100%\n  );\n`\n\nconst TitleDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-right: 10px;\n  text-align: left;\n  .name {\n    font-weight: 600;\n    font-size: ${props => props.mainLength < 20 ? \"1.1em\" : `${1.1 - props.mainLength*0.008}em`}};\n  }\n  .native-name {\n    font-size: ${props => props.secondaryLength < 20 ? \".8em\" : `${.8 - props.secondaryLength*0.004}em`};\n  }\n`\n\nconst BodyDiv = styled.div`\n  display: flex;\n  height: 66%;\n  flex-direction: column;\n  justify-content: center;\n`\n\nconst putCommas = (bigNumber) => {\n  let numberWithCommas = \"\";\n  const digits = String(bigNumber);\n  if(digits.includes(\".\")) { return digits; }\n  for(let i = digits.length - 1; i >= 0; i--){\n    numberWithCommas += digits[i];\n    if((digits.length-i) % 3 === 0 && i !== 0){\n      numberWithCommas += \",\";\n    }\n  }\n  return numberWithCommas.split(\"\").reverse().join(\"\");\n}\n\nfunction CountryCard(props) {\n  const { country } = props;\n  return (\n    <Card region={country.region}>\n      <Link \n        to={`/countrycraze/country/${country.alpha3Code}`} \n        style={{ color: 'inherit', textDecoration: 'inherit'}\n      }>\n        <HeaderDiv>\n          <TitleDiv\n              mainLength={country.name.length}\n              secondaryLength={country.nativeName.length}\n          >\n            <h2 className=\"name\">{country.name}</h2>\n            <p className=\"native-name\">{country.nativeName}</p>\n          </TitleDiv>\n          <Flag \n            src={country.flag} \n            alt={`${country.name} flag`\n          }/>\n        </HeaderDiv>\n        <Underline region={country.region}/>\n        <BodyDiv region={country.region}>\n          <p><strong>Capital city:</strong> {country.capital ? country.capital : \"-\"}</p>\n          <p><strong>Region:</strong> {country.region ? country.region : \"-\"}</p>\n          <p><strong>Subregion:</strong> {country.subregion ? country.subregion : \"-\"}</p>\n          <p><strong>Population:</strong> {country.population ? putCommas(country.population) : \"0\"}</p>\n          {country.area ? <p><strong>Area:</strong>{` ${putCommas(country.area)} km²`}</p> : null}\n        </BodyDiv>\n      </Link>\n    </Card>\n  )\n}\n\nexport default CountryCard\n","import React from 'react';\nimport styled from \"styled-components\";\n\nconst activeColor = \"#222\";\nconst inactiveColor = \"#999\";\n\nconst PaginationButtonsDiv = styled.div`\n  margin: 15px 0;\n`\n\nconst PaginationButton = styled.button`\n  padding: 8px;\n  margin: 2px;\n  border-radius: 4px;\n  outline: none;\n  cursor: pointer;\n  color: ${props => props.active ? activeColor : inactiveColor};\n  background: ${props => props.active ? inactiveColor : activeColor};\n  border: 2px solid ${inactiveColor};\n  width: 35px;\n  height: 35px;\n  transition-duration: .3s;\n\n  &:hover {\n    background: ${inactiveColor};\n    color: ${activeColor};\n  }\n`\n\nconst Span = styled.button`\n  padding: 8px;\n  margin: 2px;\n  border-radius: 4px;\n  outline: none;\n  cursor: default;\n  color: ${\"#777\"};\n  background: ${activeColor};\n  border: 2px solid ${\"#777\"};\n  width: 35px;\n  height: 35px;\n`\n\nconst getPaginationButtons = (pagesCount, setPage, currentPage) => {\n  let isBreakShown = false;\n  return [...Array(pagesCount).keys()].map((el) => {\n    const pageNumber = el+1;\n    let maxDistance = 1;\n    if(isCorner(currentPage, pagesCount)){\n      maxDistance = 2;\n    }\n    if(pagesCount < 9 || Math.abs(pageNumber-currentPage) <= maxDistance || isCorner(pageNumber, pagesCount)){\n      isBreakShown = false;\n      return <PaginationButton\n        onClick={() => setPage(pageNumber)}\n        active={currentPage === pageNumber}\n        key={pageNumber}\n      >\n        {pageNumber}\n      </PaginationButton>\n    } else {\n      if (isBreakShown) {\n        return null;\n      } else {\n        isBreakShown = true;\n        return <Span key={pageNumber}><strong>...</strong></Span>;\n      }\n    }\n  })\n}\n\nconst isCorner = (number, maxNumber) => {\n  return number === maxNumber || number === 1;\n}\n\nfunction PaginationButtons(props) {\n  return (\n    <PaginationButtonsDiv>\n      {getPaginationButtons(props.pagesCount, props.setPage, props.page)}\n    </PaginationButtonsDiv>\n  )\n}\n\nexport default PaginationButtons\n","import React, { useState } from \"react\";\nimport CountryCard from \"./CountryCard/CountryCard\";\nimport styled from \"styled-components\";\nimport PaginationButtons from \"./PaginationButtons/PaginationButtons\";\n\nconst CardsDiv = styled.div`\n  display: flex;\n  max-width: 960px;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  margin: 0;\n`\n\nconst Div = styled.div`\n  width: 80vw;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  min-height: 100vh;\n`\n\nconst P = styled.div`\n  color: white;\n  text-align: center;\n  padding-top: 30px;\n`\n\nfunction Results(props) {\n  const [pageResultsSize] = useState(20);\n\n  if(props.countries.length === 0){\n    return <Div>\n      <P>\n        Sorry. Nothing was found. Change your search criteria.\n      </P>\n    </Div>\n  }\n\n  return (\n    <Div>\n      <PaginationButtons\n        pagesCount={Math.ceil(props.countries.length/pageResultsSize)}\n        page={props.page}\n        setPage={props.setPage}\n      />\n      <CardsDiv>\n        {props.countries.map((country, i) => {\n          return (i < props.page * pageResultsSize && i >= (props.page - 1) * pageResultsSize ) ? (\n              <CountryCard \n                country={country}\n                key={i}\n              />\n            ) : null;\n        })}\n      </CardsDiv>\n      <PaginationButtons\n        pagesCount={Math.ceil(props.countries.length/pageResultsSize)}\n        page={props.page}\n        setPage={props.setPage}\n      />\n    </Div>\n  )\n}\n    \nexport default Results;","import React, { useEffect, useReducer } from 'react';\nimport getInitialData from \"./Reducers/GetInitialData\";\nimport { SORTED_BY, INITIAL_PAGE } from \"../Common/Constants.js\";\nimport reducer from \"./Reducers/Reducers.js\";\nimport actions from \"./Actions/Actions.js\";\nimport Search from \"./Components/Search/Search\";\nimport CountriesCardsContainer from \"./Components/Results/Results\";\n\nfunction MainPage(params) {\n  const initialRegion = params.location.search ? params.location.search.split('region=')[1].split('&')[0] : \"\";\n  const initialSubregion = params.location.search && params.location.search.includes(\"subregion\") ? \n    params.location.search.replace('%20', ' ').split('=')[2] : \"\";\n  const [state, dispatch] = useReducer(reducer, {\n    initial: {\n      allCountries: [],\n      regionsMapping: {}\n    },\n    search: {\n      filteredCountries: [],\n      currentQuery: \"\",\n      isSearched: false,\n    },\n    filters: {\n      sovereignStates: false,\n      region: initialRegion,\n      subregion: initialSubregion\n    },\n    sortedBy: SORTED_BY.ALPHABETICAL,\n    page: INITIAL_PAGE\n  });\n\n  const swapSovereignStates = () => {\n    dispatch(actions.swapSovereignStatesFilter());\n    dispatch(actions.search(state.search.currentQuery));\n  }\n\n  const changeRegionFilter = (region) => {\n    dispatch(actions.changeRegionFilter(region));\n    dispatch(actions.search(state.search.currentQuery));\n  }\n\n  const changeSubregionFilter = (subregion) => {\n    dispatch(actions.changeSubregionFilter(subregion));\n    dispatch(actions.search(state.search.currentQuery));\n  }\n\n  const search = (query) => {\n    dispatch(actions.search(query));\n  }\n\n  const changeSorting = (sortingType) => {\n    dispatch(actions.changeSortingType(sortingType))\n    dispatch(actions.sort())\n  }\n\n  const setPage = (number) => {\n    dispatch(actions.changePage(number))\n  }\n\n  const changeQueryParameters = (newQuery) => {\n    params.history.push({\n      pathname: '/countrycraze',\n      search: newQuery\n    })\n  }\n\n  useEffect(() => {\n    getInitialData().then((data) => \n      dispatch(actions.setInitialData(data))\n    ).catch((error) => {\n      console.log(error);\n      return <p>There was an error while downloading the data.</p>\n    })\n  }, [dispatch])\n  \n  if(!state.initial.regionsMapping || !Object.keys(state.initial.regionsMapping).length){\n    return <p>Loading...</p>;\n  }\n\n  return (\n    <>\n      <Search \n        search={search}\n        swapSovereignStates={swapSovereignStates}\n        changeRegionFilter={changeRegionFilter}\n        changeSubregionFilter={changeSubregionFilter}\n        regionsMapping={state.initial.regionsMapping}\n        changeSorting={changeSorting}\n        filters={state.filters}\n        changeQueryParameters={changeQueryParameters}\n      />\n      <CountriesCardsContainer \n        countries={\n          state.search.filteredCountries\n        }\n        page={state.page}\n        setPage={setPage}\n      />\n    </>\n  )\n}\n\nexport default MainPage\n","import styled from 'styled-components';\n\nconst Card = styled.div`\n  display: flex;\n  flex-direction: column;\n  background-color: white;\n  box-shadow: 1px 1px 2px #000;\n  margin: 10px 0;\n\n  h2, h3 {\n    padding: 20px;\n    width: 100%;\n    background: lightgray;\n    margin: 0;\n    text-align: center;\n  }\n\n  p {\n    border-top: 1px solid #aaa;\n    padding: 10px;\n    margin: 0;\n    display: flex;\n    justify-content: space-between;\n  }\n\n  .left {\n    max-width: 40%;\n    font-weight: bold;\n  }\n\n  .right {\n    max-width: 55%;\n    align-self: center;\n    text-align: right;\n  }\n\n  div.right > p {\n    border-top: none;\n    padding: 3px;\n  }\n\n  .center {\n    display: flex;\n    justify-content: center;\n  }\n`\n\nexport default Card\n","import React from 'react'\n\nfunction EmptyCheck(props) {\n  if(Array.isArray(props.value || 'string' === typeof props.value)){\n    return props.value.length > 0 && props.value[0] !== \"\" ? \n      <>{props.children}</>\n    : null\n  } else {\n    return props.value ?\n      <>{props.children}</>\n    : null\n  }\n\n}\n\nexport default EmptyCheck\n","import React from 'react';\nimport Card from './Card';\nimport EmptyCheck from '../../Common/EmptyCheck';\n\nfunction MainCard({country}) {\n  return (\n    <Card>\n      <h2>General information</h2>\n      <p>\n        <span className=\"left\">Name</span> \n        <span className=\"right\">{country.name}</span>\n      </p>\n      <p>\n        <span className=\"left\">Native name</span> \n        <span className=\"right\">{country.nativeName}</span>\n      </p>\n      <EmptyCheck value={country.region}>\n        <p>\n          <span className=\"left\">Region</span> \n          <span className=\"right\">{country.region}</span>\n        </p>\n      </EmptyCheck>\n      <EmptyCheck value={country.subregion}>\n        <p>\n        <span className=\"left\">Subregion</span> \n        <span className=\"right\">{country.subregion}</span>\n        </p>\n      </EmptyCheck>\n      <EmptyCheck value={country.capital}>\n        <p>\n        <span className=\"left\">Capital</span> \n        <span className=\"right\">{country.capital}</span>\n        </p>\n      </EmptyCheck>\n      <EmptyCheck value={country.demonym}>\n        <p>\n          <span className=\"left\">Demonym</span> \n          <span className=\"right\">{country.demonym}</span>\n        </p>\n      </EmptyCheck>\n    </Card>\n  )\n}\n\nexport default MainCard\n","import React from 'react'\nimport Card from './Card';\nimport EmptyCheck from '../../Common/EmptyCheck';\n\nfunction StatisticsCard({country}) {\n  return (\n    <Card>\n      <h3>Statistics</h3>\n      <EmptyCheck value={country.area}>\n        <p>\n          <span className=\"left\">Area</span> \n          <span className=\"right\">{`${country.area ? country.area : \">1\"} km²`}</span>\n        </p>\n      </EmptyCheck>\n      <EmptyCheck value={country.population}>\n        <p>\n          <span className=\"left\">Population</span> \n          <span className=\"right\">{country.population}</span>\n        </p>\n      </EmptyCheck>\n      {getDensityRow(country.population, country.area)}\n    </Card>\n  )\n}\n\nconst getDensityRow = (population, area) => {\n  const density = population/area;\n  if(density === Infinity || density < 0.01){\n    return null;\n  }\n  return (\n    <p>\n      <span className=\"left\">Population density</span> \n      <span className=\"right\">{(density < 0 ? (density).toFixed(2) : density.toFixed(0))}</span>\n    </p>\n  )\n}\n\nexport default StatisticsCard\n","import React from 'react'\nimport Card from './Card';\nimport EmptyCheck from '../../Common/EmptyCheck';\nimport styled from 'styled-components';\n\nconst Timezone = styled.span`\n  display: block;\n  margin: 0;\n  padding: 0;\n`\n\nfunction CodesCard({country}) {\n  return (\n    <Card>\n      <h3>Codes</h3>\n      <EmptyCheck value={country.alpha2Code}>\n        <p>\n          <span className=\"left\">Alpha2Code</span> \n          <span className=\"right\">{country.alpha2Code}</span>\n        </p>\n      </EmptyCheck>\n      <EmptyCheck value={country.alpha3Code}>\n        <p>\n          <span className=\"left\">Alpha3Code</span> \n          <span className=\"right\">{country.alpha3Code}</span>\n        </p>\n      </EmptyCheck>\n      <EmptyCheck value={country.cioc}>\n        <p>\n          <span className=\"left\">CIOC</span> \n          <span className=\"right\">{country.cioc}</span>\n        </p>\n      </EmptyCheck>\n      <EmptyCheck value={country.numericCode}>\n        <p>\n          <span className=\"left\">Numeric code</span> \n          <span className=\"right\">{country.numericCode}</span>\n        </p>\n      </EmptyCheck>\n      <EmptyCheck value={country.topLevelDomain}>\n        <p>\n          <span className=\"left\">Domain</span> \n          <span className=\"right\">\n            {Object.values(country.topLevelDomain).reduce((acc, el) => {\n              return acc + el + \" \";\n            }, \"\")}\n          </span>\n        </p>\n      </EmptyCheck>\n      <EmptyCheck value={country.callingCodes}>\n        <p>\n          <span className=\"left\">Phone codes</span> \n          <span className=\"right\">\n            {Object.values(country.callingCodes).reduce((acc, el) => {\n              return acc + el + \" \";\n            }, \"\")}\n          </span>\n        </p>\n      </EmptyCheck>\n      <p>\n        <span className=\"left\">Timezones</span> \n        <span className=\"right\">\n          {Object.values(country.timezones).map((el, i) => {\n            return <Timezone key={i}>{el}</Timezone>\n          }, \"\")}\n        </span>\n      </p>\n    </Card> \n  )\n}\n\nexport default CodesCard\n","import React from 'react'\nimport Card from './Card';\nimport EmptyCheck from '../../Common/EmptyCheck';\n\nconst languagesMap = [[\"de\", \"German\"], [\"es\", \"Spanish\"], [\"fr\", \"French\"], [\"ja\", \"Japanese\"], [\"it\", \"Italian\"], \n  [\"br\", \"Brazilian Portuguese\"], [\"pt\", \"Portuguese\"], [\"nl\", \"Dutch\"], [\"hr\", \"Serbo-Croatian\"], [\"fa\", \"Farsi\"]]\n\nconst mapToLanguageName = (code) => {\n  for(let language of languagesMap) {\n    if(language[0] === code){\n      return language[1]\n    }\n  }\n}\n\nfunction LanguagesCard({country}) {\n  return (\n    <EmptyCheck value={country.translations}>\n      <Card>\n        <h3>Translations</h3>\n        {Object.values(country.translations).map((el, i) => {\n          return <EmptyCheck value={el} key={i}>\n            <p>\n              <span className=\"left\">{mapToLanguageName(Object.keys(country.translations)[i])}</span> \n              <span className=\"right\">{el}</span>\n            </p>\n          </EmptyCheck>\n        })}\n      </Card>\n    </EmptyCheck>\n  )\n}\n\nexport default LanguagesCard\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Div = styled.div`\n  display: flex;\n  border: 1px solid #ccc;\n\n  button {\n    flex: 1;\n    background: none;\n    border: none;\n    padding: 3px 0;\n    cursor: pointer;\n    outline: none;\n\n    &.active {\n      background: #ccc;\n\n      &:hover {\n        background: #ddd;\n      }\n    }\n\n    &:hover {\n      background: #ccc;\n    }\n  }\n`\n\nconst getButtons = (length, setActiveId, activeId, values) => {\n  if(length <= 1) { \n    return null \n  }\n\n  return (\n    <Div>\n      {values.map((el, i) => {\n        return <button \n            className={activeId === i ? \"active\" : \"\"}\n            onClick={() => setActiveId(i)}\n            key={i}\n          >{el.name}</button>\n      })}\n    </Div>\n  )\n}\n\nfunction Accordion(props) {\n  return (\n    <>\n      {props.children}\n      {\n        getButtons(props.length, props.setActiveId, props.activeId, props.values)\n      }\n    </>\n  )\n}\n\nexport default Accordion\n","import { useState } from 'react';\n\nconst useAccordionValues = (values) => {\n  const [ activeId, setActiveId ] = useState(0);\n\n  const getValue = () => {\n    if(activeId > values.length - 1){\n      return values[0];\n    } else {\n      return values[activeId];\n    }\n  }\n\n  return [ activeId, setActiveId, getValue ];\n}\n\nexport {\n  useAccordionValues\n}","import React from 'react';\nimport Accordion from './Accordion';\nimport { useAccordionValues } from './Hooks';\n\nfunction LanguagesAccordion(props) {\n  const [ activeId, setActiveId, getValue ] = useAccordionValues(props.values);\n  const currentLanguage = getValue();\n\n  return (\n    <>\n      <h3>Languages</h3>\n      <Accordion\n        length={props.values.length}\n        setActiveId={setActiveId}\n        activeId={activeId}\n        values={props.values}\n      >\n        <p>\n          <span className=\"left\">Name</span> \n          <span className=\"right\">{currentLanguage.name}</span>\n        </p>\n        <p>\n          <span className=\"left\">Native name</span> \n          <span className=\"right\">{currentLanguage.nativeName}</span>\n        </p>\n        <p>\n          <span className=\"left\">Codes</span> \n          <span className=\"right\">{currentLanguage.iso639_1} {currentLanguage.iso639_2}</span>\n        </p>\n      </Accordion>\n    </>\n  )\n}\n\nexport default LanguagesAccordion\n","import React from 'react'\nimport Card from './Card';\nimport LanguagesAccordion from './Accordions/LanguagesAccordion';\nimport EmptyCheck from '../../Common/EmptyCheck';\n\nfunction LanguageAccordionCard({country}) {\n  return (\n    <EmptyCheck value={country.languages}>\n      <Card>\n          <LanguagesAccordion\n            values={country.languages}\n          />\n      </Card>\n    </EmptyCheck>\n  )\n}\n\nexport default LanguageAccordionCard\n","import React from 'react';\nimport Accordion from './Accordion';\nimport EmptyCheck from '../../../Common/EmptyCheck';\nimport { useAccordionValues } from './Hooks';\n\nfunction CurrenciesAccordion(props) {\n  const [ activeId, setActiveId, getValue ] = useAccordionValues(props.values);\n  const currentCurrency = getValue();\n\n  if(currentCurrency.name === null || currentCurrency.name === '[E]'){\n    return null;\n  }\n\n  return (\n    <>\n      <h3>Currencies</h3>\n      <Accordion\n        length={props.values.length}\n        setActiveId={setActiveId}\n        activeId={activeId}\n        values={props.values}\n      >\n        <p>\n          <span className=\"left\">Name</span> \n          <span className=\"right\">{currentCurrency.name}</span>\n        </p>\n        <EmptyCheck value={currentCurrency.code}>\n          {\n            <p>\n              <span className=\"left\">Code</span> \n              <span className=\"right\">{currentCurrency.code === '(none)' ? '-' : currentCurrency.code}</span>\n            </p>\n          }\n        </EmptyCheck>\n        <p>\n          <span className=\"left\">Symbol</span> \n          <span className=\"right\">{currentCurrency.symbol}</span>\n        </p>\n      </Accordion>\n    </>\n  )\n}\n\nexport default CurrenciesAccordion\n","import React from 'react'\nimport Card from './Card';\nimport CurrenciesAccordion from './Accordions/CurrenciesAccordion';\nimport EmptyCheck from '../../Common/EmptyCheck';\n\nfunction CurrencyAccordionCard({country}) {\n  return (\n    <EmptyCheck value={country.currencies}>\n      <Card>\n          <CurrenciesAccordion\n            values={country.currencies}\n          />\n      </Card>\n    </EmptyCheck>\n  )\n}\n\nexport default CurrencyAccordionCard\n","import React from 'react';\nimport Accordion from './Accordion';\nimport EmptyCheck from '../../../Common/EmptyCheck';\nimport styled from 'styled-components';\nimport { useAccordionValues } from './Hooks';\n\nconst OtherSpelling = styled.span`\n  display: block;\n  margin: 0;\n  padding: 0;\n`\n\nfunction RegionalBlocsAccordion(props) {\n  const [ activeId, setActiveId, getValue ] = useAccordionValues(props.values);\n  const currentBloc = getValue();\n\n  return (\n    <>\n      <h3>Regional blocs</h3>\n      <Accordion\n        length={props.values.length}\n        setActiveId={setActiveId}\n        activeId={activeId}\n        values={props.values}\n      >\n        <p>\n          <span className=\"left\">Name</span> \n          <span className=\"right\">{currentBloc.name}</span>\n        </p>\n        <EmptyCheck value={currentBloc.code}>\n          <p>\n            <span className=\"left\">Acronym</span> \n            <span className=\"right\">{currentBloc.code}</span>\n          </p>\n        </EmptyCheck>\n        <EmptyCheck value={currentBloc.otherNames}>\n          <p>\n            <span className=\"left\">Other names</span> \n            <span className=\"right\">\n              {currentBloc.otherNames.map((el, i) => \n                <OtherSpelling key={i}>{el}</OtherSpelling>)\n              }\n            </span>\n          </p>\n        </EmptyCheck>\n        <EmptyCheck value={currentBloc.otherAcronyms}>\n          <p>\n            <span className=\"left\">Other acronyms</span> \n            <span className=\"right\">\n              {currentBloc.otherAcronyms.map((el, i) => \n                <OtherSpelling key={i}>{el}</OtherSpelling>)\n              }\n            </span>\n          </p>\n        </EmptyCheck>\n      </Accordion>\n    </>\n  )\n}\n\nexport default RegionalBlocsAccordion\n","import React from 'react'\nimport Card from './Card';\nimport RegionalBlocsAccordion from './Accordions/RegionalBlocsAccordion';\nimport EmptyCheck from '../../Common/EmptyCheck';\n\nfunction RegionalBlocAccordionCard({country}) {\n  return (\n    <EmptyCheck value={country.regionalBlocs}>\n      <Card>\n          <RegionalBlocsAccordion\n            values={country.regionalBlocs}\n          />\n      </Card>\n    </EmptyCheck>\n  )\n}\n\nexport default RegionalBlocAccordionCard\n","import React from 'react';\nimport EmptyCheck from '../../Common/EmptyCheck';\nimport Card from './Card';\n\nfunction AlternativeSpellingsCard({country}) {\n  return (\n    <Card>\n      <EmptyCheck value={country.altSpellings}>\n        <h3>Alternative spellings</h3>\n        {Object.values(country.altSpellings).map((el, i) => {\n          return <p className=\"center\" key={i}>{el}</p>;\n        }, \"\")}\n      </EmptyCheck>\n    </Card>\n  )\n}\n\nexport default AlternativeSpellingsCard\n","import React from 'react';\nimport EmptyCheck from '../../Common/EmptyCheck';\nimport Card from './Card';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst NeighboursDiv = styled.div`\n  display: flex;\n  justify-content: space-around;\n  flex-wrap: wrap;\n  padding: 20px 10px;\n\n  a {\n    color: #333;\n    margin: 0 3px;\n  }\n`\n\nfunction NeighboursCard({country}) {\n  if(!country.borders.length){\n    return null;\n  }\n\n  return (\n    <EmptyCheck value={country.borders}>\n      <Card>\n        <h3>Neighbours</h3>\n        <NeighboursDiv>\n            {country.borders.map((neighbour, i) => {\n              return <Link \n                to={`/countrycraze/country/${neighbour}`} \n                key={i}\n              >{neighbour}</Link>\n            }, \"\")}\n        </NeighboursDiv>\n      </Card>\n    </EmptyCheck>\n  )\n}\n\nexport default NeighboursCard\n","import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { NAME_NORMALIZATION_DICTIONARY } from '../Common/Constants';\nimport styled from 'styled-components';\nimport MainCard from './Cards/MainCard';\nimport StatisticsCard from './Cards/StatisticsCard';\nimport CodesCard from './Cards/CodesCard';\nimport LanguagesCard from './Cards/LanguagesCard';\nimport LanguageAccordionCard from './Cards/LanguageAccordionCard';\nimport CurrencyAccordionCard from './Cards/CurrencyAccordionCard';\nimport RegionalBlocAccordionCard from './Cards/RegionalBlocAccordionCard';\nimport AlternativeSpellingsCard from './Cards/AlternativeSpellingsCard';\nimport NeighboursCard from './Cards/NeighboursCard';\nimport EmptyCheck from '../Common/EmptyCheck';\n\nconst widthChange = \"750px\";\n\nconst Breadcrumb = styled.div`\n  margin: 20px 20px 10px 20px;\n  color: white;\n\n  a {\n    color: white;\n  }\n\n  span {\n    margin: 0 3px;\n    cursor: default;\n  }\n`\n\nconst Div = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 90%;\n  max-width: 1080px;\n  margin: auto;\n\n  * {\n    cursor: default;\n  }\n\n  a {\n    cursor: pointer;\n  }\n\n  @media (min-width: ${widthChange}) {\n    align-items: flex-start;\n    justify-content: space-around;\n    flex-direction: row;\n    margin: 10px 0;\n  }\n`\n\nconst Column = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 90%;\n  margin: 0;\n\n  @media (min-width: ${widthChange}) {\n    width: 30%;\n    margin: 10px 0;\n  }\n`\n\nconst Flag = styled.img`\n  width: 100%;\n  margin: 10px 0;\n  order: 1;\n\n  @media (min-width: ${widthChange}) {\n    order: 0;\n  }\n`\n\nfunction CountryPage({match}) {\n  let [ country, setCountry ] = useState(null);\n\n  const normalizeName = (country, dictionary) => {\n    for (let entry of dictionary) {\n      if (entry[0] === country.name) {\n        return Object.assign({}, country, {name: entry[1]});\n      }\n    }\n    return country;\n  }\n\n  useEffect(() => {\n    async function getCountryData(){\n      const resp = await fetch(\n        // process.env.REACT_APP_MOCK_URL ? \n        // `${process.env.REACT_APP_MOCK_URL}/rest/v2/alpha/${match.params.alpha3Code}` : \n        `https://restcountries.eu/rest/v2/alpha/${match.params.alpha3Code}`\n      );\n      const data = await resp.json();\n      return data;\n    }\n\n    getCountryData().then((country) => {\n      setCountry(normalizeName(country, NAME_NORMALIZATION_DICTIONARY));\n    }).catch((er) => {\n      console.log(er.response);\n    })\n  }, [match.params.alpha3Code])\n\n  return (country && country.name) ? (\n    <>\n      <Breadcrumb>\n        <Link to=\"/countrycraze\">All</Link>\n        <EmptyCheck value={country.region}>\n          <span>></span>\n          <Link to={{pathname: \"/countrycraze\", search: `region=${country.region}`}}>{country.region}</Link>\n        </EmptyCheck>\n        <EmptyCheck value={country.subregion}>\n          <span>></span>\n          <Link to={{ pathname: \"/countrycraze\", \n                      search: `region=${country.region}&subregion=${country.subregion}`}\n            }>{country.subregion}</Link>\n        </EmptyCheck>\n          <span>></span>\n          <span>{country.name}</span>\n      </Breadcrumb>\n      <Div>\n        <Column>\n          <MainCard country={country}/>\n          <StatisticsCard country={country}/>\n          <CodesCard country={country}/>\n        </Column>\n        <Column>\n          <LanguageAccordionCard country={country}/>\n          <CurrencyAccordionCard country={country}/>\n          <LanguagesCard country={country}/>\n        </Column>\n        <Column>\n          <Flag src={country.flag}/>\n          <AlternativeSpellingsCard country={country}/>\n          <NeighboursCard country={country}/>\n          <RegionalBlocAccordionCard country={country}/>\n        </Column>\n      </Div>\n    </>\n  ) : null;\n}\n\nexport default CountryPage\n","import React from 'react';\nimport styled from \"styled-components\";\nimport 'typeface-roboto';\nimport { Route, Switch } from \"react-router-dom\";\nimport MainPage from \"./MainPage/MainPage\";\nimport CountryPage from \"./CountryPage/CountryPage\";\n\nconst Div = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  font-family: Roboto;\n  color: #333;\n  background: linear-gradient(#333, #444);\n\n  button { \n    user-select: none;\n  }\n\n  * {\n    box-sizing: border-box;\n  }\n`\n\nfunction App() {\n  return (\n    <Div>\n      <Switch>\n        <Route exact path=\"/countrycraze\" component={MainPage}/>\n        <Route path=\"/countrycraze/country/:alpha3Code\" component={CountryPage}/>\n        <Route path=\"*\" component={MainPage}/>\n      </Switch>\n    </Div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createGlobalStyle } from \"styled-components\";\nimport { Router } from \"react-router-dom\";\nimport { createBrowserHistory } from \"history\";\n\nconst customHistory = createBrowserHistory();\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    margin: 0;\n    background: linear-gradient(#222, #333);\n  }\n`\n\nReactDOM.render(\n  <Router history={customHistory}>\n    <GlobalStyle/>\n    <App />\n  </Router>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}